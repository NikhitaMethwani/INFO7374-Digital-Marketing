# -*- coding: utf-8 -*-
"""Customer Segmentation RFM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P59F2qoa_lPkf9V_rKX7emtXxzrwYrGp
"""

import pandas as pd

df_rfm = pd.read_csv('/content/drive/My Drive/ADM Project/Dataset/rfm_data.csv')

df_rfm.head()

df_rfm.describe()

df_rfm.columns

df_rfm['TotalPrice'] = df_rfm['Quantity'] * df_rfm['Price']

df_rfm['invoice_date'].min(),df_rfm['invoice_date'].max()

import datetime as dt
NOW = dt.datetime(2020,4,5)
df_rfm['invoice_date'] = pd.to_datetime(df_rfm['invoice_date'])

df_rfm.head()

df_rfm_tab = df_rfm.groupby('user_id').agg({'invoice_date': lambda x: (NOW - x.max()).days, 
                                            'Invoice_Number': lambda x: len(x),
                                            'TotalPrice': lambda x: x.sum()})

df_rfm_tab

df_rfm_tab.rename(columns={'Invoice_Number':'Frequency',
                           'invoice_date':'Recency',
                           'TotalPrice':'Monetary'},inplace=True)

df_rfm_tab

df_rfm_tab = df_rfm_tab.reset_index()

# df_rfm_tab.rename(columns={'Invoice Number':'Frequency',
#                            'invoice_date':'Recency',
#                            'TotalPrice':'Monetary'},inplace=True)

df_rfm_tab

quantiles = df_rfm_tab.quantile(q=[0.25,0.5,0.75])
quantiles = quantiles.to_dict()

segmented_rfm = df_rfm_tab

def RScore(x,p,d):
    if x <= d[p][0.25]:
        return 1
    elif x <= d[p][0.50]:
        return 2
    elif x <= d[p][0.75]: 
        return 3
    else:
        return 4
    
def FMScore(x,p,d):
    if x <= d[p][0.25]:
        return 4
    elif x <= d[p][0.50]:
        return 3
    elif x <= d[p][0.75]: 
        return 2
    else:
        return 1

segmented_rfm['r_quartile'] = segmented_rfm['Recency'].apply(RScore, args=('Recency',quantiles,))
segmented_rfm['f_quartile'] = segmented_rfm['Frequency'].apply(FMScore, args=('Frequency',quantiles,))
segmented_rfm['m_quartile'] = segmented_rfm['Monetary'].apply(FMScore, args=('Monetary',quantiles,))
segmented_rfm.head()

segmented_rfm['RFMScore'] = segmented_rfm.r_quartile.map(str) + segmented_rfm.f_quartile.map(str) + segmented_rfm.m_quartile.map(str)
segmented_rfm.head()

segmented_rfm[segmented_rfm['RFMScore']=='111'].sort_values('Monetary', ascending=False).head(10)

segmented_rfm['RFMScore'].value_counts()

segmented_rfm.to_csv("/content/drive/My Drive/ADM Project/Dataset/customer_segmented.csv")